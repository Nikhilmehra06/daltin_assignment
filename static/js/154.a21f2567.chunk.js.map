{"version":3,"file":"static/js/154.a21f2567.chunk.js","mappings":"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","sources":["common/loginRegisterBtn/LoginRegisterBtn.jsx","pages/Register/Register.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./loginregisterbtn.scss\";\nimport google from \"../../assets/Images/google1.png\";\nimport apple from \"../../assets/Images/apple1.png\";\n\nconst LoginRegisterBtn = ({ name, from }) => {\n  const isLogin = from == \"login\";\n  return (\n    <div>\n      <div className=\"btn_wrapper\">\n        <button className=\"btn\">{name}</button>\n        <p className=\"already_account\">\n          {isLogin ? \"Don’t have an account yet?\" : \"Already have an account ?\"}\n          <Link to={isLogin ? \"/register\" : \"/login\"} className=\"login_link\">\n            {\" \"}\n            {isLogin ? \"Register\" : \"Login Now\"}\n          </Link>\n        </p>\n      </div>\n      <div className=\"container\">\n        <div className=\"line\"></div>\n        <div className=\"or\">OR</div>\n        <div className=\"buttons\">\n          <button className=\"google-button\">\n            <img\n              src={google}\n              alt=\"Google\"\n            />\n          </button>\n          <button className=\"apple-button\">\n            <img\n              src={apple}\n              alt=\"Apple\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginRegisterBtn;\n","import React, { useState } from \"react\";\nimport \"./register.scss\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport LoginRegisterBtn from \"../../common/loginRegisterBtn/LoginRegisterBtn\";\nconst Register = () => {\n  const navigate = useNavigate();\n\n  const initData = {\n    full_name: \"\",\n    email: \"\",\n    confirm_password: \"\",\n    password: \"\",\n  };\n\n  const initError = {\n    full_name: \"\",\n    email: \"\",\n    confirm_password: \"\",\n    password: \"\",\n  };\n\n  const [data, setData] = useState({ ...initData });\n\n  const [error, setError] = useState({ ...initError });\n\n  const handleValidation = (data) => {\n    let isValidated = true;\n    let copyerror = { ...error };\n    for (let key in data) {\n      let value = data[key].toString().trim();\n      let emailRegex =\n        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      switch (key) {\n        case \"full_name\":\n          if (!value) {\n            copyerror.full_name = \"Full name is required\";\n            isValidated = false;\n          } else {\n            copyerror.full_name = \"\";\n          }\n\n          break;\n\n        case \"email\":\n          if (!value) {\n            copyerror.email = \"Email is required\";\n            isValidated = false;\n          } else if (!emailRegex.test(value)) {\n            copyerror.email = \"Enter valid email\";\n            isValidated = false;\n          } else {\n            copyerror.email = \"\";\n          }\n\n          break;\n\n        case \"password\":\n          if (!value) {\n            copyerror.password = \"Password is requires\";\n            isValidated = false;\n          } else {\n            copyerror.password = \"\";\n          }\n          break;\n\n        case \"confirm_password\":\n          if (!value) {\n            copyerror.confirm_password = \"Confirm password  is required\";\n            isValidated = false;\n          } else if (value !== data.password) {\n            copyerror.confirm_password =\n              \"Confirm password  must be same as password\";\n            isValidated = false;\n          } else {\n            copyerror.confirm_password = \"\";\n          }\n\n          break;\n\n        default:\n      }\n    }\n    setError({ ...copyerror });\n    return isValidated;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    handleValidation({ [name]: value });\n    setData({ ...data, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    const res = await handleValidation({ data });\n    if (res) {\n      navigate(\"/confirmDetails\");\n    }\n    e.preventDefault();\n  };\n\n  const { full_name, confirm_password, email, password } = data;\n\n  return (\n    <div className={\"signup_form_container\"}>\n      <div className={\"left\"}>\n        <h1>Your Journey Abroad Starts Here!</h1>\n\n        <p>\n          Join thousands of students who’ve found their dream universities with\n          us.\n        </p>\n      </div>\n\n      <div className={\"right\"}>\n        <form className={\"form_container\"} onSubmit={handleSubmit}>\n          <h1>Create Account</h1>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Full Name\"\n              value={full_name}\n              name=\"full_name\"\n              onChange={handleChange}\n              className={\"input\"}\n            />\n            <p style={{ color: \"red\" }}>{error?.full_name}</p>\n          </div>\n\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              value={email}\n              onChange={handleChange}\n              name=\"email\"\n              className={\"input\"}\n            />\n            <p style={{ color: \"red\" }}>{error?.email}</p>\n          </div>\n\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              className={\"input\"}\n            />\n            <p style={{ color: \"red\" }}>{error?.password}</p>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Confirm Password\"\n              value={confirm_password}\n              name=\"confirm_password\"\n              onChange={handleChange}\n              className={\"input\"}\n            />\n            <p style={{ color: \"red\" }}>{error?.confirm_password}</p>\n          </div>\n\n          <LoginRegisterBtn name={\"Register Now\"} from={\"Register\"} />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["_ref","name","from","isLogin","_jsxs","children","className","_jsx","Link","to","src","alt","Register","navigate","useNavigate","data","setData","useState","full_name","email","confirm_password","password","error","setError","handleValidation","isValidated","copyerror","key","value","toString","trim","emailRegex","test","handleChange","e","target","onSubmit","async","preventDefault","type","placeholder","onChange","style","color","LoginRegisterBtn"],"sourceRoot":""}